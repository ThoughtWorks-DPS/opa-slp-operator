---
version: 2.1

orbs:
  kube: twdps/kube-ops@dev:latest

parameters:
  context:
    description: circleci context for all jobs
    type: string
    default: twdps-core-labs-team

on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

commands:
  alpine-no-sudo-prep:
    steps:
      - run:
          name: add dependencies to circleci-remote-docker image
          command: |
            apk add --no-cache curl bash

            echo 'install ruby'
            apk add --no-cache build-base ruby ruby-dev ruby-webrick ruby-bundler

            echo 'install python'
            apk add --no-cache python3 python3-dev libffi-dev
            python3 -m ensurepip
            rm -r /usr/lib/python*/ensurepip
            pip3 install --upgrade pip
            if [ ! -e /usr/bin/pip ]; then ln -s /usr/bin/pip3 /usr/bin/pip ; fi
            ln -s -f /usr/bin/pydoc3 /usr/bin/pydoc
            ln -s -f /usr/bin/python3 /usr/bin/python
            ln -s -f /usr/bin/python3-config /usr/bin/python-config

            echo 'install nodejs/npm'
            apk add --no-cache nodejs npm 

  alpine-sudo-prep:
    steps:
      - run:
          name: add dependencies to circleci-remote-docker image
          command: |
            sudo apk add --no-cache curl
            
            echo 'install ruby'
            sudo apk add --no-cache build-base ruby ruby-dev ruby-webrick ruby-bundler

            echo 'install python'
            sudo apk add --no-cache python3 python3-dev libffi-dev
            sudo python3 -m ensurepip
            sudo rm -r /usr/lib/python*/ensurepip
            sudo pip3 install --upgrade pip
            if [ ! -e /usr/bin/pip ]; then sudo ln -s /usr/bin/pip3 /usr/bin/pip ; fi
            sudo ln -s -f /usr/bin/pydoc3 /usr/bin/pydoc
            sudo ln -s -f /usr/bin/python3 /usr/bin/python
            sudo ln -s -f /usr/bin/python3-config /usr/bin/python-config

            echo 'install nodejs/npm'
            sudo apk add --no-cache nodejs npm 

  slim-no-sudo-prep:
    steps:
      - run:
          name: add dependencies to circleci-remote-docker image
          command: |
            apt-get update && apt-get install --no-install-recommends -y curl bash

            echo 'install ruby'
            apt-get install --no-install-recommends -y ruby-full 

            echo 'install python'
            apt-get install --no-install-recommends -y python3-dev python3-pip python3-venv
            ln -f -s /usr/bin/pip3 /usr/bin/pip
            ln -s -f /usr/bin/pydoc3 /usr/bin/pydoc
            ln -s -f /usr/bin/python3 /usr/bin/python
            ln -s -f /usr/bin/python3-config /usr/bin/python-config

            echo 'install nodejs/npm'
            bash -c "curl -sL https://deb.nodesource.com/setup_16.x | bash - "
            apt-get install --no-install-recommends -y nodejs npm 

  slim-sudo-prep:
    steps:
      - run:
          name: add dependencies to circleci-remote-docker image
          command: |
            sudo apt-get update && sudo apt-get install --no-install-recommends -y curl

            echo 'install ruby'
            sudo apt-get install --no-install-recommends -y ruby-full 

            echo 'install python'
            sudo apt-get install --no-install-recommends -y python3-dev python3-pip python3-venv
            sudo ln -f -s /usr/bin/pip3 /usr/bin/pip
            sudo ln -s -f /usr/bin/pydoc3 /usr/bin/pydoc
            sudo ln -s -f /usr/bin/python3 /usr/bin/python
            sudo ln -s -f /usr/bin/python3-config /usr/bin/python-config

            echo 'install nodejs/npm'
            sudo bash -c "curl -sL https://deb.nodesource.com/setup_16.x | bash - "
            sudo apt-get install --no-install-recommends -y nodejs npm 

# go install sigs.k8s.io/kind@v0.14.0
jobs:
  alpine-no-sudo-latest:
    docker:
      - image: twdps/circleci-remote-docker:alpine-stable
    steps:
      - alpine-no-sudo-prep
      - kube/packages:
          use-sudo: false
          # argocd-version: latest
          # awspec-version: latest
          bats-version: latest
          # datadog-version: latest
          # helm-version: latest 
          # inspec-version: latest
          # istioctl-version: latest
          # kubectl-version: latest
          # sonobuoy-version: latest
          # terraform-version: latest

  alpine-no-sudo-versions:
    docker:
      - image: twdps/circleci-remote-docker:alpine-stable
    steps:
      - alpine-no-sudo-prep
      - kube/packages:
          use-sudo: false
          # argocd-version: 2.4.10
          # awspec-version: 1.28.0
          bats-version: 1.7.0
          # datadog-version: 0.44.0
          # helm-version: 3.9.3
          # inspec-version: 5.18.14
          # istioctl-version: 1.14.3
          # kubectl-version: 1.24.3
          # sonobuoy-version: 0.56.10
          # terraform-version: 1.2.7

  alpine-sudo-latest:
    docker:
      - image: twdps/circleci-kube-ops:alpine-stable
    steps:
      - alpine-sudo-prep
      - kube/packages:
          use-sudo: true
          # argocd-version: latest
          # awspec-version: latest
          bats-version: latest
          # datadog-version: latest
          # helm-version: latest 
          # inspec-version: latest
          # istioctl-version: latest
          # kubectl-version: latest
          # sonobuoy-version: latest
          # terraform-version: latest

  alpine-sudo-versions:
    docker:
      - image: twdps/circleci-kube-ops:alpine-stable
    steps:
      - alpine-sudo-prep
      - kube/packages:
          use-sudo: true
          # argocd-version: 2.4.10
          # awspec-version: 1.28.0
          bats-version: 1.7.0
          # datadog-version: 0.44.0
          # helm-version: 3.9.3
          # inspec-version: 5.18.14
          # istioctl-version: 1.14.3
          # kubectl-version: 1.24.3
          # sonobuoy-version: 0.56.10
          # terraform-version: 1.2.7

  slim-no-sudo-latest:
    docker:
      - image: twdps/circleci-remote-docker:slim-stable
    steps:
      - slim-no-sudo-prep
      - kube/packages:
          use-sudo: false
          # argocd-version: latest
          # awspec-version: latest
          bats-version: latest
          # datadog-version: latest
          # helm-version: latest 
          # inspec-version: latest
          # istioctl-version: latest
          # kubectl-version: latest
          # sonobuoy-version: latest
          # terraform-version: latest

  slim-no-sudo-versions:
    docker:
      - image: twdps/circleci-remote-docker:slim-stable
    steps:
      - slim-no-sudo-prep
      - kube/packages:
          use-sudo: false
          # argocd-version: 2.4.10
          # awspec-version: 1.28.0
          bats-version: 1.7.0
          # datadog-version: 0.44.0
          # helm-version: 3.9.3
          # inspec-version: 5.18.14
          # istioctl-version: 1.14.3
          # kubectl-version: 1.24.3
          # sonobuoy-version: 0.56.10
          # terraform-version: 1.2.7

  slim-sudo-latest:
    docker:
      - image: twdps/circleci-kube-ops:slim-stable
    steps:
      - slim-sudo-prep
      - kube/packages:
          use-sudo: true
          # argocd-version: latest
          # awspec-version: latest
          bats-version: latest
          # datadog-version: latest
          # helm-version: latest 
          # inspec-version: latest
          # istioctl-version: latest
          #  kubectl-version: latest
          # sonobuoy-version: latest
          # terraform-version: latest

  slim-sudo-versions:
    docker:
      - image: twdps/circleci-kube-ops:slim-stable
    steps:
      - slim-sudo-prep
      - kube/packages:
          use-sudo: true
          # argocd-version: 2.4.10
          # awspec-version: 1.28.0
          bats-version: 1.7.0
          # datadog-version: 0.44.0
          # helm-version: 3.9.3
          # inspec-version: 5.18.14
          # istioctl-version: 1.14.3
          # kubectl-version: 1.24.3
          # sonobuoy-version: 0.56.10
          # terraform-version: 1.2.7

  ubuntu-machine-latest:
    machine:
      image: ubuntu-2204:2022.07.1
    shell: /bin/bash -eo pipefail
    steps:
      - kube/packages:
          use-sudo: true
          # argocd-version: latest
          bats-version: latest
          # datadog-version: latest
          # helm-version: latest 
          # inspec-version: latest
          # istioctl-version: latest
          # kubectl-version: latest
          # sonobuoy-version: latest
          # terraform-version: latest
      # - run:
      #     name: install nokogiri as awspec dependency
      #     command: gem install nokogiri
      # - kube/packages:
      #     use-sudo: false
      #     awspec-version: latest

  ubuntu-machine-versions:
    machine:
      image: ubuntu-2204:2022.07.1
    shell: /bin/bash -eo pipefail
    steps:
      - kube/packages:
          use-sudo: true
          # argocd-version: 2.4.10
          bats-version: 1.7.0
          # datadog-version: 0.44.0
          # helm-version: 3.9.3
          # inspec-version: 5.18.14
          # istioctl-version: 1.14.3
          # kubectl-version: 1.24.3
          # sonobuoy-version: 0.56.10
          # terraform-version: 1.2.7
      # - run:
      #     name: install nokogiri as awspec dependency
      #     command: gem install nokogiri
      # - kube/packages:
      #     use-sudo: false
      #     awspec-version: latest

workflows:
  version: 2
  dev-build:
    jobs:
      - alpine-no-sudo-latest:
          context: << pipeline.parameters.context >>
          filters: *on-push-main
      - alpine-no-sudo-versions:
          context: << pipeline.parameters.context >>
          filters: *on-push-main
      - alpine-sudo-latest:
          context: << pipeline.parameters.context >>
          filters: *on-push-main
      - alpine-sudo-versions:
          context: << pipeline.parameters.context >>
          filters: *on-push-main
      - slim-no-sudo-latest:
          context: << pipeline.parameters.context >>
          filters: *on-push-main
      - slim-no-sudo-versions:
          context: << pipeline.parameters.context >>
          filters: *on-push-main
      - slim-sudo-latest:
          context: << pipeline.parameters.context >>
          filters: *on-push-main
      - slim-sudo-versions:
          context: << pipeline.parameters.context >>
          filters: *on-push-main
      - ubuntu-machine-latest:
          context: << pipeline.parameters.context >>
          filters: *on-push-main
      - ubuntu-machine-versions:
          context: << pipeline.parameters.context >>
          filters: *on-push-main
