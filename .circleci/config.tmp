---
version: 2.1

orbs:
  op: twdps/onepassword@1.0.0
  cosign: twdps/cosign@0.1.0
  kube: twdps/kube-ops@0.2.0

parameters:
  context:
    description: circleci context for all jobs
    type: string
    default: twdps-core-labs-team
  machine-image:
    description: circleci machine to use for operator build jobs
    type: string
    default: ubuntu-2204:2022.07.1

on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

on-tag-main: &on-tag-main
  branches:
    ignore: /.*/
  tags:
    only: /.*/

commands:
  set-environment:
    parameters:
      registry: 
        description: dtr compatible registry
        type: string
        default: docker.io
      registry-login:
        type: string
        default: DOCKER_LOGIN
      registry-password:
        type: string
        default: DOCKER_PASSWORD
    steps:
      - op/install-op:
          os: Ubuntu
      - op/env:
          env-file: op.env
      - kube/packages:
          kubectl-version: 1.24.4
      - run:
          name: install kind
          command: go install sigs.k8s.io/kind@v0.14.0
      - run:
          name: install bats
          command: npm install -g bats@1.7.0
      - run:
          name: Confirm Docker registry environment variables are configured and correct
          command: |
            if [ ! ${<< parameters.registry-login >>-} ]; then
              echo "registry access username is not set, will not be able to push image."
              exit 1
            fi

            if [ ! ${<< parameters.registry-password >>-} ]; then
              echo "registry access password is not set, will not be able to push image."
              exit 1
            fi
      - run:
          name: Confirm Docker registry login
          command: |
            echo 'write to .docker/config.json is secure in ephemeral runtime environment'
            echo ${<< parameters.registry-password >>} | docker login -u ${<< parameters.registry-login >>} --password-stdin << parameters.registry >>

  integration-test:
    steps:
      - run:
          name: launch ci local cluster
          command: kind create cluster --name test
      - run:
          name: populate credential secret and resource request templates
          command: |
            op inject -i test/slp-das-credentials.yaml.tpl -o slp-das-credentials.yaml
            op inject -i test/slp-request.yaml.tpl -o slp-request.yaml
      - run:
          name: deploy dev build operator
          command: |
            make deploy
            sleep 35
      - run:
          name: smoke test operator
          command: bats test/operator-smoketest.bats
      - run:
          name: deploy ci-dev namespace
          command: kubectl apply -f test/ci-namespace.yaml
      - run:
          name: deploy ci slp-das credentials
          command: kubectl apply -f slp-das-credentials.yaml
      - run:
          name: deploy slp resource requests
          command: |
            kubectl apply -f slp-request.yaml
            sleep 45
      - run:
          name: smoke test slp deployment
          command: bats test/slp-smoketest.bats

jobs:
  dev-build:
    machine:
      image: << pipeline.parameters.machine-image >>
    shell: /bin/bash -eo pipefail
    parameters:
      registry: 
        description: dtr compatible registry
        type: string
        default: docker.io
      registry-login:
        type: string
        default: DOCKER_LOGIN
      registry-password:
        type: string
        default: DOCKER_PASSWORD
    steps:
      - checkout
      - set-environment
      - run:
          name: build dev version of operator
          command: |
            make docker-build
      - run:
          name: push dev image to registry
          command: |
            make docker-push
      - integration-test

workflows:
  version: 2
  dev-build:
    jobs:
      - dev-build:
          context: << pipeline.parameters.context >>
          filters: *on-push-main